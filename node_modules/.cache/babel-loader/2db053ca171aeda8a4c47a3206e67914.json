{"ast":null,"code":"var _jsxFileName = \"/Users/macOS/OneDrive(unlimited)/OneDrive - my.smccd.edu/Ongoing/Doc/React/Practices/monster-rolodex/src/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\n\nclass App extends Component {\n  //shortcut rcc\n  constructor(props) {\n    //shortcut con\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    //shortcut cdm, componentDidMount: show element on DOM first.\n    // get API\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  render() {\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filteredMonstrs = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"search monsters\",\n      onChange: e => {\n        this.setState({\n          searchField: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      monsters: this.state.monsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macOS/OneDrive(unlimited)/OneDrive - my.smccd.edu/Ongoing/Doc/React/Practices/monster-rolodex/src/App.js"],"names":["React","Component","CardList","App","constructor","props","state","monsters","searchField","componentDidMount","fetch","then","response","json","users","setState","render","filteredMonstrs","filter","monster","name","toLowerCase","includes","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,4CAAzB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAE;AAE5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAE;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAAE;AACpB;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAAEO;AAAZ,KAAd,CAFjB;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAACT,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAAwB,KAAKF,KAAnC;AACA,UAAMW,eAAe,GAAGV,QAAQ,CAACW,MAAT,CAAgBC,OAAO,IAC7CA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCd,WAAW,CAACa,WAAZ,EAApC,CADsB,CAAxB;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,WAAW,EAAC,iBAAjC;AAAmD,MAAA,QAAQ,EAAEE,CAAC,IAAI;AAAE,aAAKR,QAAL,CAAc;AAAEP,UAAAA,WAAW,EAAEe,CAAC,CAACC,MAAF,CAASC;AAAxB,SAAd;AAAgD,OAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA5ByB;;AA+B5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\n\nclass App extends Component { //shortcut rcc\n\n  constructor(props) { //shortcut con\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  };\n  componentDidMount() { //shortcut cdm, componentDidMount: show element on DOM first.\n    // get API\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const {monsters, searchField}=this.state;\n    const filteredMonstrs = monsters.filter(monster=>(\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    ))\n\n    return (\n      <div className=\"App\">\n        <input type=\"search\" placeholder=\"search monsters\" onChange={e => { this.setState({ searchField: e.target.value }) }} />\n        <CardList monsters={this.state.monsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}